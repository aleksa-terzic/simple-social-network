name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.10.1]
        
    services:
          postgres:
            image: postgres:14
            env:
              POSTGRES_USER: "${{ secrets.DB_USER }}"
              POSTGRES_PASSWORD: "${{ secrets.DB_PASSWORD }}"
              POSTGRES_DB: "${{ secrets.DB_NAME }}"
            ports:
              - 5432:5432
            options: >-
              --health-cmd pg_isready
              --health-interval 10s
              --health-timeout 5s
              --health-retries 5
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Create env file
      run: |
        touch .env
        echo SECRET_KEY="${{ secrets.SECRET_KEY }}" >> .env
        echo DEBUG=True >> .env
        echo DB_NAME="${{ secrets.DB_NAME }}" >> .env
        echo DB_USER="${{ secrets.DB_USER }}" >> .env
        echo DB_PASSWORD="${{ secrets.DB_PASSWORD }}" >> .env
        echo DB_HOST="${{ secrets.DB_HOST }}" >> .env
        echo REDIS_URL="${{ secrets.REDIS_URL }}" >> .env
        echo ABS_API_KEY_EMAIL="${{ secrets.ABS_API_KEY_EMAIL }}" >> .env
        echo ABS_API_KEY_GEO="${{ secrets.ABS_API_KEY_GEO }}" >> .env
        echo ABS_API_KEY_HOLIDAY="${{ secrets.ABS_API_KEY_HOLIDAY }}" >> .env
        cat .env
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run migrations
      run: |
        python manage.py makemigrations
        python manage.py migrate
    - name: Run tests
      run: pytest
